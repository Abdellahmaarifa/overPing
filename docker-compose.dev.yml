version: '3.7'
services:
  ##############
  ## POSTGRES ##
  # postgres_db:
  #   image: postgres
  #   networks:
  #     - database
  #   environment:
  #     - POSTGRES_USER=admin
  #     - POSTGRES_PASSWORD=admin
  #     - POSTGRES_DB=demo
  #   restart: always
  #   volumes:
  #     - ./database/data/dev:/var/lib/postgresql/data
  #   container_name: postgres_db
  ##############
  ## SERVER ##
  # gateway:
  #   build:
  #     context: ./gateway
  #     dockerfile: Dockerfile.dev
  #   networks:
  #     - webapp
  #     - database
  #   ports:
  #     - 5500:5500
  #   volumes:
  #     - ./gateway/node_modules:/app/node_modules
  #     - ./gateway/src:/app/src
  #   depends_on:
  #     - postgres_db
  #   restart: always
  #   command: ['nodemon']
  #   container_name: gateway
  #############
  ## AUTH SERVICE ##
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile.dev
    networks:
      - webapp
      - database
    ports:
      - 3000:3000
    volumes:
      - ./auth/node_modules:/app/node_modules
      - ./auth/src:/app/src
    # depends_on:
    #   - postgres_db
    restart: always
    command: ['nodemon']
    container_name: auth
    
  #############
  ## CLIENT ##
  # client:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile.dev
  #   env_file:
  #     - ./client/.env
  #   volumes:
  #     - ./client/node_modules:/app/node_modules
  #     - ./client/src:/app/src
  #     - ./client/public:/app/public
  #   networks:
  #     - webapp
  #   ports:
  #     - 5173:5173
  #   command: npm run dev
  #   stdin_open: true
  #   restart: always
  #   container_name: client
networks:
  webapp:
    driver: bridge
  database:
    driver: bridge
